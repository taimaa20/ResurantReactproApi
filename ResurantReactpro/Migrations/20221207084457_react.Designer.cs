// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResurantReactpro.Models;

namespace ResurantReactpro.Migrations
{
    [DbContext(typeof(New_DataContext))]
    [Migration("20221207084457_react")]
    partial class react
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ResurantReactpro.Models.Customers", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ResurantReactpro.Models.FoodItems", b =>
                {
                    b.Property<int>("FoodItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FoodItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("FoodItemId");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("ResurantReactpro.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FoodItemId")
                        .HasColumnType("int");

                    b.Property<double>("FoodItemPrice")
                        .HasColumnType("float");

                    b.Property<int>("OrderMasterId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("foodItemsFoodItemId")
                        .HasColumnType("int");

                    b.Property<int?>("orderMastersOrderMasterId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailsId");

                    b.HasIndex("foodItemsFoodItemId");

                    b.HasIndex("orderMastersOrderMasterId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ResurantReactpro.Models.OrderMasters", b =>
                {
                    b.Property<int>("OrderMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("GTotal")
                        .HasColumnType("float");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("PMethode")
                        .HasColumnType("int");

                    b.Property<int?>("customersCustomerId")
                        .HasColumnType("int");

                    b.HasKey("OrderMasterId");

                    b.HasIndex("customersCustomerId");

                    b.ToTable("OrderMasters");
                });

            modelBuilder.Entity("ResurantReactpro.Models.OrderDetails", b =>
                {
                    b.HasOne("ResurantReactpro.Models.FoodItems", "foodItems")
                        .WithMany("_OrderDetails")
                        .HasForeignKey("foodItemsFoodItemId");

                    b.HasOne("ResurantReactpro.Models.OrderMasters", "orderMasters")
                        .WithMany("_OrderDetails")
                        .HasForeignKey("orderMastersOrderMasterId");

                    b.Navigation("foodItems");

                    b.Navigation("orderMasters");
                });

            modelBuilder.Entity("ResurantReactpro.Models.OrderMasters", b =>
                {
                    b.HasOne("ResurantReactpro.Models.Customers", "customers")
                        .WithMany("_OrderMasters")
                        .HasForeignKey("customersCustomerId");

                    b.Navigation("customers");
                });

            modelBuilder.Entity("ResurantReactpro.Models.Customers", b =>
                {
                    b.Navigation("_OrderMasters");
                });

            modelBuilder.Entity("ResurantReactpro.Models.FoodItems", b =>
                {
                    b.Navigation("_OrderDetails");
                });

            modelBuilder.Entity("ResurantReactpro.Models.OrderMasters", b =>
                {
                    b.Navigation("_OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
